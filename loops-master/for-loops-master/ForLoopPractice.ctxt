#BlueJ class context
comment0.target=ForLoopPractice
comment0.text=\r\n\ Complete\ each\ loop\ problem\ and\ test\ in\ main.\r\n\ \r\n\ @author\ YOU\r\n\ @version\ TODAY\r\n
comment1.params=a\ b
comment1.target=int\ sum(int,\ int)
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ \ \ \ //\ Return\ the\ factorial\ of\ n.\r\n\ \ \ \ public\ static\ int\ factorial(int\ n)\ {\r\n\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ \r\n\ \ \ \ //\ Return\ the\ nth\ term\ in\ the\ Fibonacci\ sequence\ beginning\ with\ {0,\ 1,\ 1,\ 2,\ ...}\r\n\ \ \ \ public\ static\ int\ nthFib(int\ n)\ {\r\n\r\n\ \ \ \ }\r\n
comment2.params=a\ b
comment2.target=int\ sumRange(int,\ int)
comment3.params=n\ a\ b
comment3.target=int\ sumAndDiv(int,\ int,\ int)
comment4.params=n\ a\ b
comment4.target=int\ sumOrDiv(int,\ int,\ int)
comment5.params=n\ a\ b
comment5.target=int\ sumXOrDiv(int,\ int,\ int)
comment6.params=n
comment6.target=int\ sumSquares(int)
comment7.params=n\ d
comment7.target=boolean\ hasDigit(int,\ int)
comment8.params=str
comment8.target=boolean\ easyPalindrome(java.lang.String)
comment8.text=\r\n\ \ \ \ //\ Return\ the\ sum\ of\ digits\ in\ an\ int.\r\n\ \ \ \ public\ static\ int\ sumDigits(int\ n)\ {\r\n\ \ \ \ \ \ \ \r\n\ \ \ \ }\r\n\r\n\r\n\ \ \ \ //\ Return\ the\ sum\ of\ all\ odd\ digits\ in\ an\ int.\r\n\ \ \ \ public\ static\ int\ sumOddDigits(int\ n)\ {\r\n\r\n\ \ \ \ }\r\n\r\n\r\n\ \ \ \ //\ Return\ true\ if\ the\ number\ of\ even\ digits\ in\ an\ int\ is\ greater\ than\ the\ number\ of\ odd\ digits\r\n\ \ \ \ public\ static\ boolean\ moreEvens(int\ n)\ {\r\n\r\n\ \ \ \ }\r\n\ \ \ \r\n\ \ \ \ //\ Return\ String\ str\ with\ the\ characters\ in\ reverse\ order.\ \r\n\ \ \ \ public\ static\ String\ reverse(String\ str)\ {\r\n\ \ \ \ \ \ \ \ String\ rev\ \=\ "";\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ for\ (int\ i\=0;\ i<str.length();\ i++)\r\n\ \ \ \ \ \ \ \ \ \ \ \ rev\ \=\ str.charAt(i)\ +\ rev;\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ return\ rev;\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ /*\r\n\ \ \ \ //\ Return\ the\ sum\ of\ the\ unicode\ values\ of\ the\ characters\ in\ str.\r\n\ \ \ \ public\ static\ int\ unicodeSum(String\ str)\ {\r\n\r\n\ \ \ \ }\r\n
comment9.params=str
comment9.target=boolean\ hardPalindrome(java.lang.String)
comment9.text=\r\n\ \ \ \ //\ Return\ String\ str\ with\ all\ non-capital\ letters\ removed.\r\n\ \ \ \ public\ static\ String\ noCaps(String\ str)\ {\r\n\r\n\ \ \ \ }\r\n\r\n\r\n\ \ \ \ //\ Return\ String\ str\ with\ all\ capital\ letters\ turned\ to\ lowercase\ and\ lowercase\ to\ capital.\ Any\ other\ characters\ should\ remain\ unchanged.\r\n\ \ \ \ public\ static\ String\ capSwap(String\ str)\r\n\ \ \ \ {\r\n\r\n\ \ \ \ }\r\n
numComments=11
